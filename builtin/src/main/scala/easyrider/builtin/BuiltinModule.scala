package easyrider.builtin

import akka.actor.{Actor, Props}
import akka.event.LoggingReceive
import akka.util.ByteString
import easyrider.Applications.{ContainerId, EffectiveConfigurationChanged}
import easyrider.Infrastructure.DeployConfigurationFile
import easyrider.{PluginFactory, EventKey, CommandDetails}
import easyrider.Events.Subscribe
import easyrider.Implicits._

class BuiltinModuleFactory extends PluginFactory {
  def props = Props(classOf[BuiltinModule])
}

class BuiltinModule extends Actor {
  context.parent ! Subscribe(CommandDetails(), "effective-configuration", classOf[EffectiveConfigurationChanged], EventKey())

  override def receive = LoggingReceive {
    case EffectiveConfigurationChanged(eventDetails, containerId, effectiveConfiguration) =>
      val content = "# Auto-generated by EasyRider\n" + effectiveConfiguration.entries.map {
        case (key, value) => s"$key=$value"
      }.mkString("\n")
      // TODO: correlate with original event
      context.parent ! DeployConfigurationFile(CommandDetails(), containerId, containerDir(containerId), "config.properties", ByteString(content, "UTF-8"))
  }

  // TODO: de-dup SshDirectoryLayout
  protected def containerDir(containerId: ContainerId) = {
    s"easyrider/containers/${containerId.containerName}"
  }

}
